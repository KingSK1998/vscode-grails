name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ["17"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Temurin JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}
          cache: gradle

      - name: Set up Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: client/package-lock.json

      - name: Make gradlew executable
        working-directory: server
        run: chmod +x gradlew

      - name: Build and test server
        working-directory: server
        run: ./gradlew --no-daemon build jacocoTestReport
        continue-on-error: ${{ github.ref != 'refs/heads/main' }}

      - name: Upload server test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: server-test-results
          path: |
            server/build/test-results/test/
            server/build/reports/jacoco/test/html/

      - name: Verify server JAR
        run: |
          echo "Checking JAR files..."
          ls -la server/build/libs/ || echo "⚠️ No JAR found"

      - name: Copy server JAR into client
        if: success()
        run: |
          mkdir -p client/server/
          cp server/build/libs/*.jar client/server/ || \
            (echo "No JAR found, skipping copy" && exit 1)

      - name: Install client dependencies
        working-directory: client
        run: npm ci

      - name: Compile TypeScript client
        working-directory: client
        run: npm run compile

      - name: Run client unit tests
        working-directory: client
        run: npm test --if-present
        continue-on-error: ${{ github.ref != 'refs/heads/main' }}

      - name: Package VSIX
        working-directory: client
        run: |
          npm install --no-save @vscode/vsce
          npx vsce package --out ../vscode-grails.vsix

      - name: Upload VSIX artifact
        uses: actions/upload-artifact@v4
        with:
          name: vscode-grails
          path: vscode-grails.vsix

  publish:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: vscode-grails
          path: .

      - name: Publish to VS Code Marketplace (manual)
        run: echo "Run 'vsce publish' locally or configure a PAT and uncomment"
        # - name: Publish to VS Code Marketplace
        #   run: npx vsce publish --pat ${{ secrets.VSCODE_PAT }}